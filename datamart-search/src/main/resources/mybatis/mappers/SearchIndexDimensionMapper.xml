<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.datamart.mapper.SearchIndexDimensionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.haier.datamart.entity.SearchIndexDimension">
        <result column="id" property="id" />
        <result column="report_id" property="reportId" />
        <result column="dic_id" property="dicId" />
        <result column="create_by" property="createBy" />
        <result column="create_date" property="createDate" />
        <result column="update_by" property="updateBy" />
        <result column="update_date" property="updateDate" />
        <result column="remarks" property="remarks" />
        <result column="del_flag" property="delFlag" />
    </resultMap>
    <resultMap id="BaseResultMap2" type="com.haier.datamart.entity.SearchIndexDimension">
        <result column="id" property="id" />
         <result column="label" property="label" />
          <result column="value" property="value" />
        <result column="report_id" property="reportId" />
        <result column="dic_id" property="dicId" />
        <result column="description" property="description" />
        <result column="create_by" property="createBy" />
        <result column="create_date" property="createDate" />
        <result column="update_by" property="updateBy" />
        <result column="update_date" property="updateDate" />
        <result column="remarks" property="remarks" />
        <result column="del_flag" property="delFlag" />
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, report_id AS reportId, dic_id AS dicId, create_by AS createBy, create_date AS createDate, update_by AS updateBy, update_date AS updateDate, remarks, del_flag AS delFlag
    </sql>
	 <sql id="searchIndexDimensionColumns">
		a.id AS "id",
		a.report_id AS "reportId",
		a.dic_id AS "dicId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="searchIndexDimensionjoins">
	LEFT JOIN search_index b ON b.id = a.report_id
	</sql>
	<select id="getInclude" parameterType="String" resultMap="BaseResultMap2">
		SELECT d.*,dic.label,dic.`value`,dic.description FROM `search_index_dimension` d LEFT JOIN sys_dict dic on dic.id=d.dic_id 
		
			 where d.del_flag = '0'
			
				AND d.report_id = #{id}
			
		
	</select>
	<select id="findList" resultType="com.haier.datamart.entity.SearchIndexDimension">
		SELECT 
			<include refid="searchIndexDimensionColumns"/>
		FROM search_index_dimension a
		<include refid="searchIndexDimensionjoins"/>
		<where>
			a.del_flag = 0
			<if test="id != null and id != ''">
				AND a.report_id = #{id}
			</if>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
		<insert id="insert">
		INSERT INTO search_index_dimension(
			id,
			report_id,
			dic_id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{reportId},
			#{dicId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update" parameterType="com.haier.datamart.entity.SearchIndexDimension">
		UPDATE search_index_dimension SET 	
			id = #{id},
			report_id = #{dicId},
			dic_id = #{contentId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE search_index_dimension SET 
			del_flag = #{DEL_FLAG_DELETE}
			WHERE id = #{id}
		<!-- <choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE api_id = #{apiId}
			</otherwise>
		</choose> -->
	</update>
	
	
	<insert id="add" parameterType="com.haier.datamart.entity.SearchIndexDimension">
insert into search_index_dimension
<trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="reportId != null" >
        report_id,
      </if>
      <if test="dicId != null" >
        dic_id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        <if test="id != null" >
        #{id},
      </if>
       <if test="reportId != null" >
        #{reportId},
      </if>
      <if test="dicId != null" >
        #{dicId},
      </if>
      <if test="createBy != null" >
        #{createBy},
      </if>
      <if test="createDate != null" >
        #{createDate},
      </if><if test="updateBy != null" >
        #{updateBy},
      </if>
      <if test="updateDate != null" >
        #{updateDate},
      </if>
      <if test="remarks != null" >
        #{remarks},
      </if>
      <if test="delFlag != null" >
        #{delFlag},
      </if>
    </trim>
</insert>

<update id="updateDelete" parameterType="com.haier.datamart.entity.SearchIndexDimension">
update search_index_dimension set del_flag='1' where report_id=#{reportId}
</update>
<select id="getIndex" parameterType="String" resultType="com.haier.datamart.entity.SearchIndexDimension">
SELECT d.id, d.report_id AS reportId, d.dic_id AS dicId,di.description as label from search_index_dimension d 
LEFT JOIN  sys_dict di on di.id=d.dic_id
 where d.report_id=#{id} and d.del_flag='0'

</select>
</mapper>
